

 mat4 MCtoLightMatrix;
uniform vec3 LightPosition;
// Ambient and diffuse scale factors.
const float As = 1.0 / 1.5;
const float Ds = 1.0 / 3.0;
const float Accessibility=1;

out vec4 ShadowCoord;
out vec4 Color;

void main()
{
 MCtoLightMatrix=gl_TextureMatrix[7];
vec4 ecPosition = gl_ModelViewMatrix * gl_Vertex;
vec3 ecPosition3 = (vec3(ecPosition)) / ecPosition.w;
vec3 VP = LightPosition - ecPosition3;
VP = normalize(VP);
vec3 normal = normalize(gl_NormalMatrix * gl_Normal);
float diffuse = max(0.0, dot(normal, VP));
float scale = min(1.0, Accessibility * As + diffuse * Ds);
vec4 texCoord = MCtoLightMatrix * gl_Vertex;
ShadowCoord = texCoord;
Color = vec4(scale * gl_Color.rgb, gl_Color.a);
gl_Position = ftransform();
}